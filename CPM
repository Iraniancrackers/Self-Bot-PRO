#!/usr/bin/env bash
#CerNer Forever
#By  CerNerCompany {Amir Bagheri}
GRE='\033[92m' # Green Light
RD='\033[91m' # Red Light
YLW='\033[93m' # Yellow Light
NC='\033[0m' # White
GrepDuo='/' #key dump
trap "exit 1" TERM
export TOP_PID=$$
BotH='Self-Bot-PRO'
function Update_CH {
if ! { sudo apt update && sudo apt upgrade -y echo E: update failed; } | grep -q '^[WE]:'; then
echo success
else
echo failure
exit 1
fi
echo ""
}
function MOREPAK {
rslv
sudo apt install git redis-server lua5.2 liblua5.2-dev lua-lgi libnotify-dev unzip tmux -y && add-apt-repository ppa:ubuntu-toolchain-r/test
sudo apt-get install libconfig++9v5 libstdc++6
sudo apt autoremove
sudo apt-get install gcc-4.9
sudo apt-get --yes install wget libconfig9 libjansson4 lua5.2 liblua5.2 make unzip git redis-server g++ whois fortune fortunes
sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
sudo apt-get install g++-4.7 -y c++-4.7 -y
sudo apt-get install libreadline-dev -y libconfig-dev -y libssl-dev -y lua5.2 -y liblua5.2-dev -y lua-socket -y lua-sec -y lua-expat -y libevent-dev -y make unzip git redis-server autoconf g++ -y libjansson-dev -y libpython-dev -y expat libexpat1-dev -y
sudo apt-get install screen -y
sudo apt-get install tmux -y
sudo apt install lua-redis
sudo apt-get install libstdc++6 -y
sudo apt-get install lua-lgi -y
sudo apt-get install libnotify-dev -y
if [ "$?" != "0" ]; then
exit 1
fi
}

function loading {
spin[0]="-"
spin[1]="\\"
spin[2]="|"
spin[3]="/"
PID=$!
echo -n "${spin[0]}"
while [ -d /proc/$PID ]
do
for i in "${spin[@]}"
do
echo -ne "\b$i"
sleep 0.7
done
done
wait $PID
if [ $? -ne 0 ]; then
echo -e "\n${RD}Failed to Update !"
kill -s TERM $TOP_PID
else
echo -e "\b${GRE}Done."
fi
}

DOVVB() {
local flag=false c count cr=$'\r' nl=$'\n'
while IFS='' read -d '' -rn 1 c; do
 if $flag; then
 printf '%c' "$c"
  else
if [[ $c != $cr && $c != $nl ]]; then
  count=0
 else
((count++))
 if ((count > 1)); then
flag=true
fi
fi
fi
 done
}
function c() {
if [ -d "$HOME/$BotH" ];then
if [ ! -f ./tg ]; then
wget --progress=bar:force https://valtman.name/files/telegram-bot-180923-nightly-linux 2>&1 | DOVVB
mv telegram-bot-180221-nightly-linux tg; chmod +x tg

echo -e "\e[1m\e[97m==> TD successfully downloaded "
fi
if [ -d "$HOME/.telegram-bot" ];then
echo -e "\e[1m\e[32m==> \e[97m The file is correct.. Telegram-Bot\e[0m"
else
mkdir $HOME/.telegram-bot; cat <<EOF > $HOME/.telegram-bot/config
default_profile = "MCP";
MCP = {
lua_script = "$HOME/$BotH/bot/bot.cerner";
};
EOF
echo -e "\e[1m\e[32m==> \e[97m The file NotFound .. Telegram-Bot\e[0m"
fi
echo -e "\e[1m\e[32m==> \e[97m The file is correct.. $BotH\e[0m"
else
echo -e "\e[1m\e[97m==> Source not found!,"
fi
echo -e "\e[1m\e[32m"
read -p "==> Do you want to install Packages??[y/n] "  -t 10 CerNerCompany
if [ "$CerNerCompany" = "Y" ];then
echo -e "\e[1m\e[97m==> Please choose the right one"
sleep 3
echo -e "\e[1m\e[32m"
read -p "==> Do you want to install Packages??[y/n] "  -t 10 CerNerCompany
fi
if [ "$CerNerCompany" = "y" ]
then
echo -ne "\e[1m\e[97mUpdating Packages...  "
Update_CH >> /dev/null 2>&1 & loading
sleep 2
echo -ne "\n\e[1m\e[97mInstalling  Packages...  "
MOREPAK >> /dev/null 2>&1 & loading
sleep 2
echo -ne "\e[1m\e[97mUpdating Packages...  "
Update_CH >> /dev/null 2>&1 & loading
fi
echo -e "\n"
read -p "==> Do you want to Edit File ??[y/n] " -t 10 CerNerCompany
echo -e "\e[0m"
if [ "$CerNerCompany" = "Y" ];then
echo -e "\e[1m\e[97m==> Please choose the right one"
sleep 3
read -p "==> Do you want to Edit File ??[y/n] " -t 10 CerNerCompany
fi
if [ "$CerNerCompany" = "y" ];then
if [ -d "$HOME/$BotH" ];then
if [ -f "$HOME/$BotH/bot/utils.cerner" ]
then
echo -e "\e[1m\e[32m==> \e[97mThe file is correct.. [DWN] \e[0m"
else
echo -e "\e[1m\e[97m==> Dwn file not found!,"
printf "\33[1;31mError Exiting..!
\33[m"
exit 0
fi
if [ -f "$HOME/$BotH/bot/function.cerner" ]
then
echo -e "\e[1m\e[32m==> \e[97mThe file is correct.. [DWN] \e[0m"
else
echo -e "\e[1m\e[97m==> Dwn file not found!,"
printf "\33[1;31mError Exiting..!
\33[m"
exit 0
fi
if [ -f "$HOME/$BotH/bot/bot.cerner" ]
then
echo -e "\e[1m\e[32m==> \e[97mThe file is correct..  [bot.cerner]\e[0m"
else
echo -e "\e[1m\e[97m==> [bot.cerner] file not found!,"
printf "\33[1;31mError Exiting..!\n\33[m"
exit 0
fi
nano /$HOME/$BotH/bot/utils.cerner
echo -e "\e[1m\e[32m==> \e[97m==> Applying changes...\e[0m"
sleep 2
echo -e "\e[1m\e[34m  -> \e[97m==> Saved !"
if [ -f "$HOME/$BotH/bot/bot.cerner" ]
then
echo -e "\e[1m\e[32m==> \e[97mThe file is correct..  [bot.cerner]\e[0m"
else
echo -e "\e[1m\e[97m==> [bot.cerner] file not found!,"
printf "\33[1;31mError Exiting..!\n\33[m"
exit 0
fi

if [ -f "$HOME/$BotH/libs/redis.lua" ]
then
echo -e "\e[1m\e[32m==> \e[97mThe file is correct.. [redis.lua]\e[0m"
else
echo -e "\e[1m\e[97m==>  redis.lua file not found!,"
printf "\33[1;31mError Exiting..!
\33[m"
exit 0
fi
if [ -f "$HOME/$BotH/libs/serpent.lua" ]
then
echo -e "\e[1m\e[32m==> \e[97mThe file is correct.. [serpent.lua]\e[0m"
else
echo -e "\e[1m\e[97m==> serpent.lua file not found!,"
printf "\33[1;31mError Exiting..!
\33[m"
exit 0
fi
if [ -f "$HOME/$BotH/libs/JSON.lua" ]
then
echo -e "\e[1m\e[32m==> \e[97m The file is correct..  [JSON.lua]\e[0m"
else
echo -e "\e[1m\e==> [97m[JSON.lua] file not found!,"
echo -e "\e[1m\e==> [97mError Exiting..!,"
exit 0
fi
if [ -d "$HOME/$BotH/DWN" ]
then
echo -e "\e[1m\e[32m==> \e[97mThe file is correct.. [DWN] \e[0m"
else
echo -e "\e[1m\e[97m==> Dwn file not found!,"
printf "\33[1;31mError Exiting..!
\33[m"
exit 0
fi
if [ -f "$HOME/$BotH/bot/utils.cerner" ]
then
echo -e "\e[1m\e[32m==> \e[97mThe file is correct.. [Utils.cerner] \e[0m"
else
echo -e "\e[1m\e[97m==> Utils.cerner file not found!,"
printf "\33[1;31mError Exiting..!
\33[m"
exit 0
fi
if [ -f "$HOME/$BotH/bot/function.cerner" ]
then
echo -e "\e[1m\e[32m==> \e[97mThe file is correct.. [Function.cerner] \e[0m"
else
echo -e "\e[1m\e[97m==> Function.cerner file not found!,"
printf "\33[1;31mError Exiting..!
\33[m"
exit 0
fi
fi
if [ "$CerNerCompany" = "n" ];then
exit 0
fi
fi
}
botstart() {
if [ -d "$HOME/.telegram-bot" ];then
echo -e "\e[1m\e[32m==> \e[97m The file is correct.. Telegram-Bot\e[0m"
else
echo -e "\e[1m\e[32m==> \e[97m The file NotFound .. Telegram-Bot\e[0m"
printf "\33[1;31mError Exiting..!
\33[m"
exit
fi
if [ -f "$HOME/$BotH/bot/bot.cerner" ]
then
echo -e "\e[1m\e[32m==> \e[97mThe file is correct..  [bot.cerner]\e[0m"
else
echo -e "\e[1m\e[97m==> [bot.cerner] file not found!,"
printf "\33[1;31mError Exiting..!
\33[m"
exit 0
fi
if [ -f "$HOME/$BotH/libs/redis.lua" ]
then
echo -e "\e[1m\e[32m==> \e[97mThe file is correct.. [redis.lua]\e[0m"
else
echo -e "\e[1m\e[97m==>  redis.lua file not found!,"
printf "\33[1;31mError Exiting..!
\33[m"
exit 0
fi
if [ -f "$HOME/$BotH/libs/serpent.lua" ]
then
echo -e "\e[1m\e[32m==> \e[97mThe file is correct.. [serpent.lua]\e[0m"
else
echo -e "\e[1m\e[97m==> serpent.lua file not found!,"

printf "\33[1;31mError Exiting..!
\33[m"
exit 0
fi
if [ -f "$HOME/$BotH/libs/JSON.lua" ]
then
echo -e "\e[1m\e[32m==> \e[97m The file is correct..  [JSON.lua]\e[0m"
else
echo -e "\e[1m\e==> [97m[JSON.lua] file not found!,"
printf "\33[1;31mError Exiting..!
\33[m"
exit 0
fi
if [ -d "$HOME/$BotH/DWN" ]
then
echo -e "\e[1m\e[32m==> \e[97mThe file is correct.. [DWN] \e[0m"
else
echo -e "\e[1m\e[97m==> Dwn file not found!,"
printf "\33[1;31mError Exiting..!
\33[m"
exit 0
fi
echo -e "\e[1m\e[32m==> \e[97mGood Lock\e[0m"
./tg | grep -v "{"
echo -e "\e[1m\e[32m==> \e[97m Good bye\e[0m"
}
function loginCLI() {
./tg -p MCP --login --phone=${1}
}

function loginAPI() {
./tg -p MCP --login --bot=${1}
}
case $1 in
l)
echo -e "\e[1m\e[36m==> \e[31m CerNer is runing.. $BotH\e[0m"
botstart
exit;;
lc)
echo -e "\e[1m\e[32m==> \e[97mPlease enter your phone number without interruption\e[0m"
read Num_MPC
loginCLI ${Num_MPC}
echo -e "\e[1m\e[32m==> \e[97mLogin completed\e[0m"
exit;;

c)
c
exit;;
la)
echo -e "\e[1m\e[32m==> \e[97mPlease enter Token  without interruption\e[0m"
read BotAPI_TOKEN
loginAPI ${BotAPI_TOKEN}
echo -e "\e[1m\e[32m==> \e[97mLogin completed\e[0m"
exit;;
esac
exit 0
